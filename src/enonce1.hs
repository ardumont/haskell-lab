module Test where

scalaskel :: (Enum t, Eq t, Num t) => t -> [(t, t, t, t)]
scalaskel n = [(w, x, y, z) |
               w <- [0..n],
               x <- [0..n],
               y <- [0..n],
               z <- [0..n],
               (1 * w) + (7 * x) + (11 * y) + (21 * z) == n]

-- *Test> map scalaskel [1..10]
-- [[(1,0,0,0)],[(2,0,0,0)],[(3,0,0,0)],[(4,0,0,0)],[(5,0,0,0)],[(6,0,0,0)],[(0,1,0,0),(7,0,0,0)],[(1,1,0,0),(8,0,0,0)],[(2,1,0,0),(9,0,0,0)],[(3,1,0,0),(10,0,0,0)]]
